# Generated by Django 2.1.5 on 2019-12-12 16:11

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(default='admin', max_length=20, verbose_name='用户名')),
                ('password', models.CharField(default='12345678', editable=False, max_length=10000, verbose_name='登陆密码')),
                ('user_phone', models.CharField(default=1, max_length=20, verbose_name='手机号码')),
                ('user_mail', models.CharField(default=1, max_length=20, verbose_name='邮箱')),
                ('isInform', models.BooleanField(default=True, verbose_name='是否推送最新通知')),
                ('isMail', models.BooleanField(default=True, verbose_name='是否发邮件')),
                ('user_type', models.IntegerField(choices=[(1, 'user'), (2, 'admin')], default=1, verbose_name='用户类型')),
                ('power_type', models.CharField(max_length=20, verbose_name='用户权限')),
                ('creator_id', models.IntegerField(default=0, verbose_name='创建者id')),
                ('update_id', models.IntegerField(default=0, verbose_name='更新者id')),
                ('lastTime', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('isDel', models.BooleanField(default=True, verbose_name='是否能删除')),
                ('img', models.ImageField(blank=True, null=True, upload_to='upload', verbose_name='头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户管理',
                'verbose_name_plural': '用户管理',
                'db_table': 'myApp_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Collect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collect_id', models.IntegerField()),
                ('creator_id', models.IntegerField(default=1, verbose_name='创建者id')),
                ('update_id', models.IntegerField(default=1, verbose_name='更新者id')),
                ('lastTime', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('isDel', models.BooleanField(default=True, verbose_name='是否能删除')),
            ],
            options={
                'verbose_name_plural': '收藏管理',
            },
        ),
        migrations.CreateModel(
            name='Forecast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pre_date', models.DateTimeField(auto_now_add=True, verbose_name='待预测日期')),
                ('pre_type', models.CharField(max_length=20, verbose_name='类型')),
                ('real_result', models.CharField(max_length=20, verbose_name='实际结果')),
                ('pre_result', models.CharField(max_length=20, verbose_name='预测结果')),
                ('lastTime', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '预测数据',
            },
        ),
        migrations.CreateModel(
            name='Grades',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gname', models.CharField(max_length=20)),
                ('gdate', models.DateTimeField()),
                ('ggirlnum', models.IntegerField()),
                ('gboynum', models.IntegerField()),
                ('isDelete', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': '测试1',
            },
        ),
        migrations.CreateModel(
            name='Inform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inform_id', models.IntegerField(default=1, verbose_name='通知id')),
                ('content', models.CharField(max_length=20, verbose_name='内容')),
                ('focus_id', models.IntegerField(verbose_name='关注用户的id')),
                ('isSend', models.BooleanField(default=True, verbose_name='是否收到')),
                ('creator_id', models.IntegerField(default=1, verbose_name='创建者id')),
                ('update_id', models.IntegerField(default=1, verbose_name='更新者id')),
                ('lastTime', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('isDel', models.BooleanField(default=True, verbose_name='是否能删除')),
            ],
            options={
                'verbose_name_plural': '通知管理',
            },
        ),
        migrations.CreateModel(
            name='Jurisdiction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('root_id', models.IntegerField(default=1, verbose_name='权限id')),
                ('root_name', models.IntegerField(choices=[(1, '预测发病数'), (2, '爬取数据'), (3, '保存数据')], default=1, verbose_name='权限名')),
                ('creator_id', models.IntegerField(default=1, verbose_name='创建者id')),
                ('update_id', models.IntegerField(default=1, verbose_name='更新者id')),
                ('lastTime', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('isDel', models.BooleanField(default=True, verbose_name='是否能删除')),
            ],
            options={
                'verbose_name_plural': '权限管理',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.IntegerField(default=1, verbose_name='留言id')),
                ('content', models.CharField(max_length=2000, verbose_name='留言内容')),
                ('isShow', models.BooleanField(default=True, verbose_name='是否显示')),
                ('creator_id', models.IntegerField(default=1, verbose_name='创建者id')),
                ('update_id', models.IntegerField(default=1, verbose_name='更新者id')),
                ('lastTime', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('isDel', models.BooleanField(default=True, verbose_name='是否能删除')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '留言管理',
            },
        ),
        migrations.CreateModel(
            name='Rawdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='时间')),
                ('address', models.CharField(max_length=20, verbose_name='地址')),
                ('temperature', models.FloatField(max_length=20, verbose_name='温度')),
                ('humidity', models.FloatField(max_length=20, verbose_name='湿度')),
                ('atmospheric', models.FloatField(max_length=20, verbose_name='气压')),
                ('precipitation', models.IntegerField(verbose_name='降水')),
                ('sunshine', models.IntegerField(verbose_name='日照')),
                ('wind', models.FloatField(max_length=20, verbose_name='风力')),
                ('aqi', models.IntegerField(verbose_name='空气质量')),
                ('pm2', models.FloatField(max_length=20, verbose_name='pm2.5')),
                ('pm10', models.FloatField(max_length=20, verbose_name='pm10')),
                ('SO2', models.FloatField(max_length=20, verbose_name='SO2')),
                ('CO', models.FloatField(max_length=20, verbose_name='CO')),
                ('NO2', models.FloatField(max_length=20, verbose_name='NO2')),
                ('O3', models.FloatField(max_length=20, verbose_name='O3')),
                ('incidence', models.FloatField(max_length=20, verbose_name='发病数')),
            ],
            options={
                'verbose_name_plural': '天气、污染原始数据',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sname', models.CharField(max_length=20)),
                ('sgender', models.BooleanField(default=True)),
                ('sage', models.IntegerField(db_column='age')),
                ('scontend', models.CharField(max_length=20)),
                ('isDelete', models.BooleanField(default=False)),
                ('lastTime', models.DateTimeField(auto_now=True)),
                ('createTime', models.DateTimeField(auto_now_add=True)),
                ('sgrade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Grades')),
            ],
            options={
                'verbose_name_plural': '测试2',
            },
            managers=[
                ('stuObj', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='collect',
            name='inform_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Inform'),
        ),
        migrations.AddField(
            model_name='collect',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
